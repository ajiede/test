
======== 2023-02-13 ========
环境
	JDK 1.8+
	maven
	mysql 5.x、8.x
	navicat
	git
	gitee ---- 注册账号
	ide ---- idea、eclipse、vscode
	postman ---- 接口测试的
	node ---- javascript 运行时环境
	浏览器：火狐、chrome
	nodepad++
	
目标
	web系统：
		上课写的案例：***管理系统（以一张表格页面为案例）、管家婆站点页面（以1~2章页面为案列）
		同学的选题：***管理系统、时间轴、博客、微人事、在线考试等
		
需求分析
	用户注册登录
	账簿的增删改查
	账户的增删改查
	流水的增删改查
	资产的增删改查
项目设计
	编码规范
		命名要清晰 ---- 见名知意
			java 驼峰法，常量全大写下划线、方法动宾介名、entity使用名词
			DB ---- 全小写下划线
			js ---- 驼峰命名，常量全大写下划线
		缩进要清晰
		逻辑要清晰
	数据库设计
		User
			id
			createDate
			updateDate
			userName
			password
		Books
			id
			createDate
			updateDate
			账簿名称
			是否默认
			成员列表
			流入 ---- 数据库没有体现
			流出 ---- 数据库没有体现
		Account
			id
			createDate
			updateDate
			账户名
			卡号
			用户名
			用户id
			备注
			流入 ---- 数据库没有体现
			流出 ---- 数据库没有体现
		Flow
			id
			createDate
			updateDate
			账簿id
			流水类型
			收支分类
			成员名
			成员id
			支出账户id
			支出账户名
			收入账户的id
			收入账户的名字
			金额
			交易时间
			商家
			项目名
			备注
			图片列表
		资产
			id
			createDate
			updateDate
			类型
			名字
			所有人
			资产占比
			估值
		==== VO ====
		Result<T> ---- 针对所有的增删改操作VO对象
			code
			message
			data
		Search
			currentPage
			pageSize
			sort
			direction
			keyword
		PageInfo
			count
			paheSize
			List<T>
	页面原型设计
		参照 www.sfac.xyz
	接口设计
		User
			方法名 -------- 请求方式 参数类型 参数传递类型 返回值
			insertUser ---- Post User json Result
			updateUser ---- Put User json Result
			deleteUserById ---- delete id path Result
			getUserById ---- Get id path User
			getUsersBySearch ---- Post Search json PageInfo
		Books
			方法名 -------- 请求方式 参数类型 参数传递类型 返回值
			insertBooks ---- Post Books json Result
			updateBooks ---- Put Books json Result
			deleteBooksById ---- delete id path Result
			getBooksById ---- Get id path User
			getBooksListBySearch ---- Post Search json PageInfo
	系统架构设计
		服务器
			mysql + SpringBoot + ORM（mybatis、hibernate、jpa）
			ORM（Object relationship mapping）
			User ----- user
			映射
				从 entity 映射为 sql，操作数据库，去的方向
				从 sql 操作数据库得到的结果集，映射为 entity，回来的方向
		前端后台管理
			Vue全家桶 + elementUI
		站点
			Vue全家桶 + elementUI
			
	git
		git clone **** ---- 将远程仓库地址克隆到本地
		git status ---- 查看仓库状态
		git pull ---- 拉去最新代码
		git add * ----- 将所有变更添加到提交序列
		git commit -m "git test" ---- 提交到本地仓库
		git push origin master ---- 将本地仓库代码推送到远程仓库master分支
		提交
			对文件进行增删改操作 ---- 将该操作的文件添加到提交序列 ---- 提交内容到本地仓库 ---- 将本地仓库的内容推送到远程仓库
开发
	
	
作业
	安装好个人电脑环境
	每组定好项目
	创建个人代码仓库，将后面写的代码上传到远程仓库中
	创建 SpringBoot 项目，书写 helloword 接口
	
第一组：物流管理系统
第二组：寝室管理系统
第三组：图书借阅管理系统
第四组：博客
第五组：书籍管理系统
第六组：比赛管理系统
第七组：仓库管理系统
第八组：店铺管理系统
第九组：档案管理系统

======== 2023-02-14 ========
引入第三方组件步骤
	引入pom依赖
	添加配置（全局配置 | 配置类）
	应用
		entity ---- dao ---- service ---- controller ---- 接口测试
引入mysql配置
引入ORM框架